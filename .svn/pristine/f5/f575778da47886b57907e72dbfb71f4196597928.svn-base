package com.dwms.common.util;

import java.io.File;
import java.lang.reflect.Field;
import java.util.List;

import org.apache.commons.lang3.StringUtils;

import com.dwms.common.config.FileConfig;
import com.dwms.common.config.ImageConfig;
import com.dwms.common.domain.MyFile;
import com.google.common.collect.Lists;


public class PathUtils {

    private static ImageConfig imageConfig = SpringUtils.getBean(ImageConfig.class);
    private static FileConfig fileConfig = SpringUtils.getBean(FileConfig.class);
    
    /**
     * 设置entity中图片的访问路径
     * 
     * @author PeiqiHuang
     * @date 2018年12月5日 上午8:49:08
     * @param obj 实体
     * @param fieldName 实体成员变量名
     * @param prefix 静态资源路径
     */
    public static <T> void setAcessPath(T obj, String fieldName, String prefix) {
        Class clz = obj.getClass();
        Field field = null;
        try {
            field = clz.getDeclaredField(fieldName);
        } catch(Exception e) {
            Class superClz = clz.getSuperclass();
            try {
                field = superClz.getDeclaredField(fieldName);
            } catch (Exception e1) {
                
            }
        }
        if (null != field) {
            field.setAccessible(true);
            try {
                Object value;
                value = field.get(obj);
                if (null == value) return;
                String val = value.toString();
                if (StringUtils.isEmpty(val)) return;
                field.set(obj, prefix + val);
            } catch (IllegalArgumentException | IllegalAccessException e) {
                e.printStackTrace();
            }
        }
    }
    
    public static <T> void setAcessPath(List<T> objs, String fieldName, String prefix) {
        for (T obj : objs) {
            setAcessPath(obj, fieldName, prefix);
        }
    }
    
    public static <T> void setImgAcessPath(List<T> objs, String fieldName) {
        setAcessPath(objs, fieldName, imageConfig.getAccessPath());
    }
    
    public static <T> void setFileAcessPath(List<T> objs, String fieldName) {
        setAcessPath(objs, fieldName, fileConfig.getAccessPath());
    }
    
    /**
     * 获取实体所有附件
     * 附件为该实体对应文件路径下保存的所有附件
     * 
     * @author PeiqiHuang
     * @date 2018年12月5日 上午10:05:32
     * @param obj
     * @param fieldName
     */
    public static List<MyFile> getAccessFiles(String dirStr) {
        File dir = new File(fileConfig.getUploadPath() + fileConfig.getRoot() + dirStr);
        if (!dirStr.endsWith("/")) {
            dirStr += "/";
        }
        List<MyFile> files = Lists.newArrayList();
        if(dir.isDirectory()) {
            MyFile myFile = null;
            for(String fileName : dir.list()) {
                files.add(new MyFile(fileName, fileConfig.getAccessPath() + fileConfig.getRoot() + dirStr + fileName));
            }
        }
        return files;
    }
}
